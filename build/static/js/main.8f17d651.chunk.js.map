{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","contexts/auth/context.js","contexts/auth/avatar.png","contexts/auth/Provider.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","name","number","type","types","payload","id","shortid","generate","deleteContact","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","connect","contacts","items","contactList","dispatch","onDeleteContact","className","map","s","contactList__item","deleteButton","onClick","state","onSubmit","useState","setName","setNumber","btnEnable","setBtnEnable","nameInputId","numberInputId","handleChange","e","currentTarget","value","find","alert","checkName","form","preventDefault","htmlFor","input","pattern","title","required","onChange","button","disabled","actions","useEffect","length","localStorage","setItem","JSON","stringify","savedContacts","getItem","parsedContacts","parse","App","combineReducers","rootReducer","contactReducer","store","createStore","composeWithDevTools","createContext","Provider","children","user","setUser","isLoggedIn","setIsLoggedIn","onLogIn","avatar","onLogOut","providerValue","useMemo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f17d651.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__3IBVR\",\"deleteButton\":\"ContactList_deleteButton__356P2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2W_gp\"};","export default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  CHANGE_FILTER: 'contacts/changeFilter',\r\n};\r\n// export default { ADD, DELETE, CHANGE_FILTER };\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\nimport types from './contacts-types';\r\n\r\n// export const addContact = createAction(ADD, ({ name, number }) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\n// export const deleteContact = createAction(DELETE);\r\n// export const changeFilter = createAction(CHANGE_FILTER);\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n  type: types.DELETE,\r\n  payload: id,\r\n});\r\n\r\nexport const changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\n// export default { addContact, deleteContact, changeFilter };\r\n","import React from 'react';\nimport s from './ContactList.module.css';\nimport {addContact, deleteContact, changeFilter} from '../../redux/contacts/contacts-actions'\nimport { connect } from 'react-redux';\n\n  \nconst ContactList = ({ contactList, onDeleteContact, filter }) => {\n\n  return (<>\n    <ul className=\"contactList\">\n      {contactList.map(({ id, name, number }) => (\n        <li key={id} className={s.contactList__item}>\n          {name} : {number}\n          <button\n            type=\"button\"\n            className={s.deleteButton}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </>)\n};\n\n// export default ContactList;\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n}\n\n\nconst mapStateToProps = ({contacts:{filter, items}}) => {\n  // const { filter, items } = state.contacts;\n  // const normalizedFilter = filter.toLowerCase();\n  // const visibleContacts = items.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n\n  return {\n    contactList: getVisibleContacts(items, filter), \n    // filter: state.contacts.filter,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: (id) => dispatch(deleteContact(id)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, {  useState } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport {addContact, deleteContact, changeFilter} from '../../redux/contacts/contacts-actions'\n\nfunction ContactForm({onSubmit, contactList}) {\n  // state = {\n  //   name: '',\n  //   number: '',\n  //   btnEnable: true,\n  // };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [btnEnable, setBtnEnable] = useState(true);\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const checkName = (name)=> {\n    const check = contactList.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (check) {\n      setBtnEnable(false);\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    setBtnEnable(true);\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    name === 'name' && checkName(value);\n\n    switch (name) {\n      case 'name': setName(value);        \n        break;\n\n      case 'number': setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({name, number});\n\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={s.input}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n          />\n        </label>\n\n        <label htmlFor={numberInputId} className={s.input}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={numberInputId}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          className={s.button}\n          disabled={!btnEnable}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n}\n\n// export default ContactForm;\n\nconst mapStateToProps = state =>{\n return {\n   contactList: state.contacts.items,\n\n }\n}\nconst mapDispatchToProps = dispatch => {\nreturn {\n    onSubmit: ({name, number}) => dispatch(addContact({name, number}))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport { changeFilter} from '../../redux/contacts/contacts-actions'\nimport { connect } from 'react-redux';\n\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\n// export default Filter;\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: (e)=> dispatch(changeFilter(e.currentTarget.value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport s from './App.module.css';\nimport shortid from 'shortid';\nimport * as actions from './redux/contacts/contacts-actions';\n// import { addContact, deleteContact, changeFilter };\n\nfunction App({ contacts, filter, addContact, deleteContact }) {\n  // const [contacts, setContacts] = useState([]);\n  // const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    if (!contacts.length) {\n      const savedContacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(savedContacts);\n\n      if (parsedContacts) {\n        parsedContacts.map(({ name, number }) => addContact({ name, number }));\n        // setContacts(parsedContacts);\n      }\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // const addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n\n  //   setContacts([contact, ...contacts]);\n  // };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  // const deleteContact = contactId => {\n  //   const newContacts = contacts.filter(contact => contact.id !== contactId);\n  //   setContacts(newContacts);\n  // };\n\n  // const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={s.App}>\n      <h1>Phonebook</h1>\n      <ContactForm /*onSubmit={addContact} contactList={contacts}*/ />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList\n        contactList={getVisibleContacts}\n        /*onDeleteContact={deleteContact}*/\n      />\n    </div>\n  );\n}\n\n// export default App;\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: ({ name, number }) =>\n    dispatch(actions.addContact({ name, number })),\n  deleteContact: () => dispatch(actions.deleteContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n// import { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\r\nimport types from './contacts-types';\r\n\r\n// const items = createReducer([], {\r\n//   [addContact]: (state, { payload }) => [...state, payload],\r\n//   [deleteContact]: (state, { payload }) =>\r\n//     state.filter(({ id }) => id !== payload),\r\n// });\r\n\r\n// const filter = createReducer('', {\r\n//   [changeFilter]: (_, { payload }) => payload,\r\n// });\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n// import { ADD, DELETE, CHANGE_FILTER } from './contacts/contacts-types';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// };\r\n\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\nconst rootReducer = combineReducers({ contacts: contactReducer });\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// };\r\n","import { createContext } from 'react';\n\nexport default createContext();\n","export default __webpack_public_path__ + \"static/media/avatar.e44fc4e2.png\";","import { useState, useMemo } from 'react';\nimport authContext from './context';\nimport avatar from './avatar.png';\n\nexport default function Provider({ children }) {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const onLogIn = () => {\n    setUser({ name: 'Манго', avatar });\n    setIsLoggedIn(true);\n  };\n\n  const onLogOut = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n  };\n\n  const providerValue = useMemo(() => {\n    return { user, isLoggedIn, onLogIn, onLogOut };\n  }, [isLoggedIn, user]);\n\n  return (\n    <authContext.Provider value={providerValue}>\n      {children}\n    </authContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport AuthProvider from './contexts/auth/Provider';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3crmn\",\"input\":\"ContactForm_input__1i2w1\",\"button\":\"ContactForm_button__Qa36j\"};"],"sourceRoot":""}